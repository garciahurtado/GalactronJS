{"version":3,"file":"public/js/dist/galactron/enemies/enemy.js","sources":["public/js/dist/galactron/enemies/enemy.js","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/2"],"names":[],"mappings":"AAIA;ACJI,CAAJ,EAAI,CAAA,YAAY,2CAAoB,CAAC;ACAjC,CAAJ,EAAI,QFIJ,SAAM,MAAK;AGJX,CAAA,gBAAe,iBAAiB,CAAC,IAAI,CACrB,iBAA2B,CAAE,UAAS,CAAC,CAAA;CDDd,AFiHxC,CEjHwC;AEArC,CAAJ,EAAI,eAAqC,CAAA;ACAzC,CAAA,AAAC,eAAe,YAAY,CAAC;CLiB5B,MAAK,CAAL,UAAM,IAAI,AAAa,CACvB;OADY,EAAC,6CAAG,EAAC;OAAC,EAAC,6CAAG,EAAC;AMjBxB,CNmBE,kBMnBa,UAAU,mCNmBjB,IAAI,CAAE,EAAC,CAAE,EAAC,EMlBmC,CNkBjC;GAElB;CAKD,KAAI,CAAJ,UAAK,CACL;AM3BD,CN4BE,kBM5Ba,UAAU,oCAC4B,CN2BtC;AACb,CAAA,WAAQ,EAAG,EAAC,CAAC;AACb,CAAA,QAAK,EAAG,EAAC,CAAC;AACV,CAAA,oBAAiB,EAAG,EAAC,CAAC;GACtB;CAKD,KAAI,CAAJ,UAAK,CACL;AMtCD,CNuCE,kBMvCa,UAAU,oCAC4B,CNsCtC;CAEb,OAAI,IAAI,KAAK,CAAE;AACd,CAAA,SAAI,KAAK,YAAY,CAAC,IAAI,CAAC,CAAC;KAC5B;CAAA,EACD;CAKD,eAAc,CAAd,UAAe,CAAE;AAEZ,CAAJ,MAAI,CAAA,SAAS,EAAG,CAAA,OAAO,CAAC,SAAS,CAAC,CAAC;AACnC,CAAA,eAAY,CAAC,SAAS,CAAC,CAAC;AACxB,CAAA,YAAS,SAAS,CAAC,IAAI,CAAC,CAAC;AACzB,CAAA,YAAS,SAAS,EAAE,EAAG,CAAA,QAAQ,EAAE,CAAC;AAClC,CAAA,YAAS,SAAS,EAAE,EAAG,CAAA,QAAQ,EAAE,CAAC;AAClC,CAAA,YAAS,QAAQ,EAAE,CAAC;GACpB;CAKD,cAAa,CAAb,UAAc,CAAE,GAaf;CAED,OAAM,CAAN,UAAO,CAAE;AM7EV,CN8EE,kBM9Ea,UAAU,sCAC4B,CN6EpC;AACf,CAAA,WAAQ,GAAI,CAAA,IAAI,QAAQ,CAAC;GACzB;CAED,MAAK,CAAL,UAAM,CAAE;AACP,CAAA,WAAQ,EAAG,EAAC,CAAC;GACb;CAUD,aAAY,CAAZ,UAAa,UAAU,CAAC,CAAA,CAAC,CAAC,CAAA,CAAC,CAC3B;AACK,CAAJ,MAAI,CAAA,MAAM,EAAG,CAAA,aAAa,QAAQ,CAAC,UAAU,CAAC,CAAC;AAC/C,CAAA,SAAM,MAAM,CAAC,CAAC,CAAE,EAAC,CAAC,CAAC;AACnB,CAAA,SAAM,YAAY,EAAG,QAAO,CAAC;AAE7B,CAAA,UAAO,IAAI,CAAC,MAAM,CAAC,CAAC;CACpB,SAAO,OAAM,CAAC;GACd;CAMD,UAAS,CAAT,UAAU,MAAM,CAChB;AACC,CAAA,SAAM,QAAQ,EAAG,CAAA,IAAI,QAAQ,CAAC;AAC9B,CAAA,SAAM,cAAc,EAAG,cAAa,CAAC;GACrC;CAAA,KA5GkB,CAAA,MAAM,OAAO,CKHwB;CLkHzD","sourcesContent":["/**\r\n * Represents a generic type of enemy which has a life meter and can be programmed to follow paths and attack the player.\r\n * @author Garcia\r\n */\r\nclass Enemy extends Phaser.Sprite {\r\n\t/*\r\n\tsparks;\r\n\tbullets;\r\n\tlastShot;\r\n\tplayer;\r\n\twave; // the wave this enemy belongs to, if any\r\n\tscore; // how many points you get for killing this guy\r\n\tweapon;\r\n\t\r\n\t[Embed(source=\"../../../../assets/sounds/dent.mp3\")] dentSound;\r\n\t*/\r\n\r\n\tEnemy(game, x = 0,y = 0) \r\n\t{\r\n\t\tsuper(game, x, y);\r\n\t\t// bullets = new FlxGroup();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Called automatically from parent constructor when the object is instantiated and when it is recycled\r\n\t */\r\n\tinit() \r\n\t{\r\n\t\tsuper.init();\r\n\t\tlastShot = 0;\r\n\t\tscore = 0;\r\n\t\toffscreenLifespan = 2;\r\n\t}\r\n\t\r\n\t/**\r\n\t * If this enemy belongs to a wave, notify the wave that this enemy has died\r\n\t */\r\n\tkill() \r\n\t{\r\n\t\tsuper.kill();\r\n\t\t\r\n\t\tif (this.wave) {\r\n\t\t\tthis.wave.onEnemyKill(this);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Custom death animation (explosion)\r\n\t */\r\n\tdeathAnimation() {\r\n\t\t// locate the explosion in the middle of the sprite\r\n\t\tvar explosion = recycle(Explosion);\r\n\t\taddSubSprite(explosion);\r\n\t\texplosion.centerAt(this);\r\n\t\texplosion.velocity.x = velocity.x;\r\n\t\texplosion.velocity.y = velocity.y;\r\n\t\texplosion.explode();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Custom hurt animation. Plays a sound and flashes the sprite with a quick white fill\r\n\t */\r\n\thurtAnimation() {\r\n\t\t//FlxG.play(dentSound);\r\n\t\t// this.addColorFill(0xFFFFFF);\r\n\t\t// self = this;\r\n\t\t// Utils.doLater(30, function(){\r\n\t\t// \tself.removeColorFill(); \r\n\t\t// });\r\n\t\t// Utils.doLater(60, function(){\r\n\t\t// \tself.addColorFill(0xFFFFFF);\r\n\t\t// });\r\n\t\t// Utils.doLater(90, function(){\r\n\t\t// \tself.removeColorFill(); \r\n\t\t// });\r\n\t}\r\n\t\r\n\tupdate() {\r\n\t\tsuper.update();\r\n\t\tlastShot += FlxG.elapsed;\r\n\t}\r\n\t\r\n\tshoot() {\r\n\t\tlastShot = 0;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Create a bullet from the Sprite factory, position it, and reference the bullets group from it\r\n\t * @param\tbulletType\r\n\t * @param\tx\r\n\t * @param\ty\r\n\t * @return\r\n\t */\r\n\tcreateBullet(bulletType,x,y)\r\n\t{\r\n\t\tvar bullet = spriteFactory.recycle(bulletType);\r\n\t\tbullet.reset(x, y);\r\n\t\tbullet.parentGroup = bullets;\r\n\t\t\r\n\t\tbullets.add(bullet);\r\n\t\treturn bullet;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Add the bullets from this weapon to the enemy's bullet list and a reference to its spriteFactory\r\n\t * @param\tweapon\r\n\t */\r\n\taddWeapon(weapon)\r\n\t{\r\n\t\tweapon.bullets = this.bullets;\r\n\t\tweapon.spriteFactory = spriteFactory;\r\n\t}\r\n}\r\n\r\n","var __moduleName = $__placeholder__0;","var $__placeholder__0 = $__placeholder__1","$traceurRuntime.defaultSuperCall(this,\n                $__placeholder__0.prototype, arguments)","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2,\n                                       $__placeholder__3)","$traceurRuntime.superCall($__placeholder__0, $__placeholder__1, $__placeholder__2,\n                                   $__placeholder__3)"]}