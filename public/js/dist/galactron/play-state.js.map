{"version":3,"file":"public/js/dist/galactron/play-state.js","sources":["public/js/dist/galactron/play-state.js","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/6"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * Base Playstate class. Provides base functionality used by all playable levels in the game. It\r\n * is meant to be extended by individual levels to provide custom functionality such as\r\n * - Level backgrounds and graphics\r\n * - Level specific enemies and waves\r\n * - Final boss for each level\r\n * \r\n * @author Garcia Hurtado\r\n */\r\nclass PlayState {\r\n\r\n\tconstructor(game){\r\n\t\tthis.camera;\r\n\t\tthis.spriteFactory;\r\n\t\tthis.player;\r\n\t\tthis.playerLayer;\r\n\t\tthis.playerBullets;\r\n\t\tthis.fx;\r\n\t\tthis.events;\r\n\t\t\r\n\t\t/**\r\n\t\t * @var An enemy is simply something that the player can kill and which can kill the player\r\n\t\t */\r\n\t\tthis.enemies;\r\n\t\tthis.waves;\r\n\t\t\r\n\t\t/**\r\n\t\t * @var An enemy bullet is a sprite that can kill the player but cannot be hit by the player\r\n\t\t */\r\n\t\tthis.enemyBullets;\r\n\t\tthis.powerups;\r\n\t\tthis.background;\r\n\r\n\t\tthis.isGameOver;\r\n\t\tthis.score;\r\n\t\t\r\n\t\t// GUI sprites\r\n\t\tthis.gui;\r\n\t\tthis.lives;\r\n\t\tthis.livesSprites;\r\n\t\tthis.scoreDisplay;\r\n\t\tthis.controls;\r\n\r\n\t\tthis.game = game;\r\n\t}\r\n\r\n\tpreload(){\r\n\t\tthis.game.load.image('player_life', 'images/galactron/player_life.png', 13, 10, 1);\r\n\r\n\t\t// [Embed(source = \"../../../assets/sounds/music.mp3\")] private var music;\r\n\t\t\r\n\t\t// Free font from http//mfs.sub.jp/font.html\r\n\t\t// [Embed(source = \"../../../assets/firewire_black.ttf\", fontFamily = \"firewire_black\", embedAsCFF=\"false\")] private var firewireBlackFont;\r\n\t\t// [Embed(source = \"../../../assets/firewire.ttf\", fontFamily=\"firewire\", embedAsCFF=\"false\")] private var firewireFont;\r\n\t}\r\n\r\n\tcreate(){\r\n\t\t\t\r\n\t\t//super.create();\r\n\t\tthis.events = new ActionChain();\r\n\t\t\r\n\t\t// set start game configuration\r\n\t\tthis.score = 0;\r\n\t\tthis.scoreDisplay;\r\n\t\tthis.lives = 3;\r\n\t\tthis.isGameOver = false;\r\n\t\t\r\n\t\t// create sprite groups / layers in order of Z display (background layers first)\r\n\t\t// spriteFactory = new SpriteFactory();\r\n\t\tthis.background = this.game.add.group();\r\n\t\tthis.waves = this.game.add.group();\r\n\t\tthis.enemies = this.game.add.group();\r\n\t\tthis.enemyBullets = this.game.add.group();\r\n\t\tthis.playerBullets = this.game.add.group();\r\n\t\tthis.player;\r\n\t\tthis.playerLayer = this.game.add.group();\r\n\t\tthis.powerups = this.game.add.group();\r\n\t\tthis.fx = this.game.add.group();\r\n\t\tthis.gui = this.game.add.group();\r\n\t\tthis.livesSprites = this.game.add.group();\r\n\t\t\r\n\t\t// camera = new FlxObject(0, 0);\r\n\t\t// camera.x = 160; // place the camera in the middle of the screen\r\n\t\t// camera.y = 120; \r\n\t\t\r\n\t\t// // start at high speed and gradually slow down\r\n\t\t// //camera.velocity.x = 1000;\r\n\t\t// camera.velocity.x = 300;\r\n\t\t\r\n\t//\t\tFlxG.bgColor = 0xff000000;\r\n\t\t\r\n\t\t// add(createBackground());\r\n\t\t// add(waves);\r\n\t\t// add(enemies);\r\n\t\t// add(playerBullets);\r\n\t\t// add(enemyBullets);\r\n\t\t// add(playerLayer);\r\n\t\t// add(fx);\r\n\t\t// add(powerups);\r\n\t\t// add(camera);\r\n\t\t//this.game.add(gui);\r\n\t\t\r\n\t\tthis.spawnPlayer();\r\n\t\tthis.createHud(); // creating the HUD at the end allows it to sit on the top layer\r\n\t\t\r\n\t\t// Add the FPS overlay\r\n\t\t//var fpsCounter = new FrameRateCounter(4, 200);\r\n\t\t//addStatic(fpsCounter);\r\n\r\n\t\t// create controls\r\n\t \tthis.controls = this.game.input.keyboard.createCursorKeys();\r\n\t \tthis.controls.fire = this.game.input.keyboard.addKey(Phaser.Keyboard.SPACEBAR);\r\n\t\t\r\n\t\t// FlxG.play(music, 1, false);\r\n\t};\r\n\t\t\r\n\t/**\r\n\t * Creates the lives / score display on the top layer of the screen\r\n\t * @todo Bullets overlap the HUD but they should appear behind it\r\n\t */\r\n\tcreateHud() {\r\n\t\tvar offset = 0;\r\n\t\t\r\n\t\t// creates the \"lives\" display\r\n\t\tfor (var i = 0; i < this.lives; i++) {\r\n\t\t\tvar life = new Phaser.Sprite(this.game, 5 + offset, 5, 'player_life');\r\n\t\t\tthis.livesSprites.add(life);\r\n\t\t\toffset += 18;\r\n\t\t}\r\n\t\t\r\n\t\t// creates the score display\r\n\t\tthis.scoreDisplay = this.createText(\"00000000\", 320, 5);\r\n\t\tthis.addStatic(this.scoreDisplay);\t\t\t\r\n\t};\r\n\t\t\r\n\t/**\r\n\t * Adds a certain number of points to the current score\r\n\t * @param\tpoints\r\n\t */\r\n\taddScore(points) {\r\n\t\tthis.score += points;\r\n\t\tthis.scoreDisplay.text = Utils.padString(this.score.toString(), 8, 0);\r\n\t};\r\n\t\t\r\n\t/**\r\n\t * Adds a sprite to the display list which is not meant to scroll, such as interface \r\n\t * elements, player lives, score, etc...\r\n\t * \r\n\t * @param\tFlxSprite\r\n\t */\r\n\taddStatic(sprite) {\r\n\t\t// sprite.scrollFactor.x = 0;\r\n\t\t// sprite.scrollFactor.y = 0;\r\n\t\tthis.gui.add(sprite);\r\n\t};\r\n\t\t\r\n\t/**\r\n\t * The main update loop. Does collision checks between player and enemies and viceversa.\r\n\t */\r\n\tupdate()\t{\r\n\t\tthis.playerInput(this.game.time.elapsed);\r\n\t\t\r\n\t\t// if (FlxG.paused) {\r\n\t\t// \treturn;\r\n\t\t// }\r\n\t\t\r\n\t\t// super.update();\r\n\t//\tevents.update();\r\n\t//\tFlxG.camera.follow(camera);\r\n\t\t\r\n\t\t// if the game is over there is no need to check for collissions\r\n\t\tif (this.isGameOver) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\t// check whether any player bullets hit an enemy\r\n\t\t// FlxG.overlap(player.bullets, enemies, enemyHit);\r\n\t\t\r\n\t\t// // did we pick up a powerup?\r\n\t\t// FlxG.overlap(player, powerups, powerUp);\r\n\t\t\r\n\t\tif(this.player.flickering == false){ // player is not immune\r\n\t\t\t// check whether the player was hit by enemies or enemy bullets\r\n\t\t\t// FlxG.overlap(player, enemies, playerHit);\r\n\t\t\t// FlxG.overlap(player, enemyBullets, playerHit);\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Handle the player input events and control the player sprite accordingly.\r\n\t */\r\n\tplayerInput(elapsed)\t{\r\n\t\tvar keys = this.controls;\r\n\r\n\t\tif (!this.isGameOver) {\r\n\t\t\t// up & down\r\n\t\tif (keys.up.isDown){\r\n\t\t\tthis.player.moveUp(elapsed);\r\n\t\t} else if(keys.down.isDown){\r\n\t\t\tthis.player.moveDown(elapsed);\r\n\t\t} else {\r\n\t\t\tthis.player.stopMovement();\r\n\t\t}\r\n\r\n\t\t// left & right\r\n\t\tif(keys.left.isDown){\r\n\t\t\tthis.player.moveLeft(elapsed);\r\n\t\t} else if(keys.right.isDown) {\r\n\t\t\tthis.player.moveRight(elapsed);\r\n\t\t}\r\n\r\n\t\tif(keys.fire.isDown){\r\n\t\t\tthis.player.fire();\r\n\t\t}\r\n\t\t\t\r\n\t\t\t// if (FlxG.keys.SPACE) {\r\n\t\t\t// \tplayer.shoot();\r\n\t\t\t// }\r\n\t\t\t// if (FlxG.keys.justPressed(\"C\")) {\r\n\t\t\t// \tplayer.cycleWeapon();\r\n\t\t\t// }\r\n\t\t\t// // Pause game\r\n\t\t\t// if (FlxG.keys.justPressed(\"P\")) {\r\n\t\t\t// \tFlxG.paused = !FlxG.paused;\r\n\t\t\t// }\r\n\t\t} else { // Game Over state\r\n\t\t\t// if(FlxG.keys.ENTER) {\r\n\t\t\t// \tFlxG.switchState( new Level1() );\r\n\t\t\t// \treturn;\r\n\t\t\t// }\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Adds a new wave to the game, adds the wave's bullets to the collision array, and the wave's enemies\r\n\t * and powerups to the playstate\r\n\t * \r\n\t * @param\twave\r\n\t */\r\n\taddWave(wave, x, y, enemyType, count, delay)\t{\r\n\t\t// defaults\r\n\t\tdelay = typeof delay !== 'undefined' ? delay : 0;\r\n\t\tcount = typeof count !== 'undefined' ? count : 1;\r\n\r\n\t\t// waves.add(wave);\r\n\t\twave.reset(x, y);\r\n\t\twave.enemyType = enemyType;\r\n\t\twave.waveSize = count;\r\n\t\twave.spawnDelay = delay;\r\n\t\t\r\n\t\twave.player = this.player;\r\n\t\twave.spriteFactory = spriteFactory;\r\n\t\t// add(wave.fx);\r\n\t\t\r\n\t\t// enemies.add(wave.enemies);\r\n\t\t// enemyBullets.add(wave.bullets);\r\n\r\n\t\t// powerups.add(wave.powerups);\r\n\t};\r\n\r\n\t/**\r\n\t * A player bullet hits an enemy\r\n\t * @param\tbullet\r\n\t * @param\tenemy\r\n\t */\r\n\tenemyHit(bullet, enemy) {\r\n\t\tbullet.kill();\r\n\t\tenemy.hurt(bullet.power);\r\n\t\t\r\n\t\tif (!enemy.alive) { // the enemy was killed by the bullet\r\n\t\t\tthis.addScore(enemy.score);\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Called when any enemies, enemy bullets or objects hit the player\r\n\t * \r\n\t * @param\tplayer\r\n\t * @param\tenemy\r\n\t */\r\n\tplayerHit(player, enemy) {\r\n\t\tthis.player.kill();\r\n\t\t\r\n\t\t// update the lives counter in the HUD\r\n\t\t\tvar lostLife = this.livesSprites.members[this.lives - 1];\r\n\t\tlostLife.kill();\r\n\t\tthis.lives--;\r\n\t\t\r\n\t\tif (this.lives > 0) {\r\n\t\t\tUtils.doLater(2000, function() {\r\n\t\t\t\tthis.spawnPlayer(); // wait 2 seconds before respawn\r\n\t\t\t}); \r\n\t\t} else {\r\n\t\t\tUtils.doLater(600, function() {\r\n\t\t\t\tthis.gameOver();\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Called when a powerup is picked up\r\n\t * @param\tbullet\r\n\t * @param\tenemy\r\n\t */\r\n\tpowerUp(ship, powerup) {\r\n\t\t// add a little FX to the powerup pickup\r\n\t\tvar explosion = new LaserExplosion(powerup.x, powerup.y);\r\n\t\texplosion.velocity = powerup.velocity;\r\n\t\t// add(explosion);\r\n\t\texplosion.explode();\r\n\t\t\r\n\t\tpowerup.kill();\r\n\t\t//powerup.destroy();\r\n\t\t\r\n\t\tvar newWeapon = player.mainWeapon.powerUp();\r\n\t\tif(newWeapon){\r\n\t\t\tplayer.changeWeapon(newWeapon);\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Create the player spaceship and its initial weapons\r\n\t */\r\n\tspawnPlayer() {\r\n\t\tthis.player = new PlayerShip(this.game, 0, 100);\r\n\t//\tplayer.flicker(3);\r\n\t\tthis.player.body.velocity.x = 100;\r\n\t\t// player.enemies = enemies; \r\n\t\t//player.spriteFactory = spriteFactory;\r\n\t\t\r\n\t\t//var missile1 = new MissileWeapon();\r\n\t\t//missile1.angle = Math.PI; // aim the missiles towards the back\r\n\t\t//player.changeMissileWeapon(missile1);\r\n\t\t//player.changeWeapon(new LaserGun());\r\n\t\t\r\n\t\t//playerBullets.add(player.bullets);\r\n\r\n\t\t\t// prevent player from going outside the viewport bounds\r\n\t\tthis.player.body.collideWorldBounds = true;\r\n\t\tthis.playerLayer.add(this.player);\r\n\t};\r\n\r\n\t/**\r\n\t * Draw the Game Over screen\r\n\t */\r\n\tgameOver() {\r\n\t\tisGameOver = true;\r\n\t\t\r\n\t\tvar txt = createText(\"GAME OVER\", -400, Math.floor(FlxG.height / 2) - 20);\r\n\t\ttxt.setFormat(\"firewire\", 24);\r\n\t\tvar txt2 = createText(\"GAME OVER\", -400, Math.floor(FlxG.height / 2) - 20);\r\n\t\ttxt2.setFormat(\"firewire_black\", 24, 0xFFFF0000); \r\n\t\t\r\n\t\t// Tweener.addTween(txt, { x, time.2, transition\"linear\" } );\r\n\t\t// Tweener.addTween(txt2, { x, time.2, transition\"linear\" } );\r\n\t\t\r\n\t\tvar moreTxt = createText(\"PRESS ENTER TO RESTART\", 300, 200);\r\n\t//\t\tTweener.addTween(moreTxt, { x, time.2, transition\"linear\" } );\r\n\t\t\r\n\t\tvar gradientColors = FlxGradient.createGradientArray(1, 20, [ 0xff0000ff, 0xffff00ff, 0xFFFFFF00, 0xFF00FF00 ], 1);\r\n\t\tvar gradientSprite = FlxGradient.createGradientFlxSprite(100, 100, [0xffff0000, 0xffffff00], 2 ); \r\n\t\tgradientSprite.scrollFactor.x = 0;\r\n\t\tgradientSprite.scrollFactor.y = 0;\r\n\t\tgradientSprite.x = 0;\r\n\t\tgradientSprite.y = 0;\r\n\t\t//var grad = FlxGradient.overlayGradientOnBitmapData(txt.pixels, 50, 50, [0xFFFF0000, 0xFFFFFF00], 100);\r\n\t\t//txt2.pixels = grad;\r\n\t\t\r\n\t\t\r\n\t\t//\tThe final display\r\n\t\tvar maskedGradient = new FlxSprite(100, 100);\r\n\t\tmaskedGradient.scrollFactor = txt2.scrollFactor;\r\n\t\t//add(maskedGradient);\r\n\r\n\t\t//FlxDisplay.alphaMask(gradientSprite.pixels, txt.pixels, maskedGradient);\r\n\t\tFlxGradient.overlayGradientOnBitmapData(this.player.pixels, 100, 100, gradientColors);\r\n\t};\r\n\r\n\tcreateText(text, x, y, color, width) {\r\n\t\tx = typeof x !== 'undefined' ? x : 0;\r\n\t\ty = typeof y !== 'undefined' ? y : 0;\r\n\t\tcolor = typeof color !== 'undefined' ? color : 0xFFFFFFFF;\r\n\t\twidth = typeof width !== 'undefined' ? width : this.game.world.width;\r\n\t\t\r\n\t\t//var txt = new FlxText(x, y, FlxG.width, text);\r\n\t\tvar style = { font: \"8px FirewireBlack\", fill: \"#FFFFFF\", align: \"center\" };\r\n\t  var txt = this.game.add.text(x, y, text, style);\r\n\t  txt.align = 'right';\r\n\r\n\t\t// txt.scrollFactor.x = 0;\r\n\t\t// txt.scrollFactor.y = 0;\r\n\t\treturn txt;\r\n\t};\r\n}\r\n","var __moduleName = $__placeholder__0;","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2)"]}