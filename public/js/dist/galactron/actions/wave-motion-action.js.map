{"version":3,"file":"public/js/dist/galactron/actions/wave-motion-action.js","sources":["public/js/dist/galactron/actions/wave-motion-action.js","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/2"],"names":[],"mappings":"AAUA;ACVI,CAAJ,EAAI,CAAA,YAAY,wDAAoB,CAAC;ACAjC,CAAJ,EAAI,mBFUJ,SAAM,iBAAgB;AGVtB,CAAA,gBAAe,iBAAiB,CAAC,IAAI,CACrB,4BAA2B,CAAE,UAAS,CAAC,CAAA;CDDd,AF+ExC,CE/EwC;AEArC,CAAJ,EAAI,qCAAqC,CAAA;ACAzC,CAAA,AAAC,eAAe,YAAY,CAAC;CL6B5B,iBAAgB,CAAhB,UAAiB,MAAM,CAAE,CAAA,SAAS,CAAE,CAAA,KAAK,AAAY,CAAE;OAAZ,OAAM,6CAAG,EAAC;AM7BtD,CN8BE,kBM9Ba,UAAU,yDN8BjB,MAAM,EM7BuC,CN6BrC;AAEd,CAAA,OAAI,UAAU,EAAG,UAAS,CAAC;AAC3B,CAAA,OAAI,MAAM,EAAG,MAAK,CAAC;AACnB,CAAA,OAAI,OAAO,EAAG,OAAM,CAAC;AAErB,CAAA,OAAI,OAAO,EAAG,CAAA,CAAC,EAAG,CAAA,IAAI,GAAG,CAAC;GAC1B;CAKD,MAAK,CAAL,UAAM,CAAE;AM1CT,CN2CE,kBM3Ca,UAAU,gDAC4B,CN0CrC;AAEd,CAAA,eAAY,EAAG,EAAC,CAAC;AACjB,CAAA,eAAY,EAAG,IAAI,SAAQ,CAAC;AAC5B,CAAA,eAAY,EAAE,EAAG,CAAA,MAAM,SAAS,EAAE,CAAC;AACnC,CAAA,eAAY,EAAE,EAAG,CAAA,MAAM,SAAS,EAAE,CAAC;AAEnC,CAAA,aAAU,EAAG,CAAA,YAAY,EAAE,EAAG,UAAS,CAAC;AACxC,CAAA,aAAU,EAAG,CAAA,YAAY,EAAE,EAAG,UAAS,CAAC;GACxC;CAKD,OAAM,CAAN,UAAO,CAAE;AMzDV,CN0DE,kBM1Da,UAAU,iDAC4B,CNyDpC;AAEf,CAAA,eAAY,GAAI,EAAC,IAAI,QAAQ,EAAG,MAAK,CAAC,CAAC;AAEvC,CAAA,OAAI,OAAO,SAAS,EAAE,EAAG,CAAA,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,CAAA,CAAG,WAAU,CAAC,EAAG,CAAA,YAAY,EAAE,CAAC;AAChF,CAAA,OAAI,OAAO,SAAS,EAAE,EAAG,CAAA,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,CAAA,CAAG,WAAU,CAAC,EAAG,CAAA,YAAY,EAAE,CAAC;CAGhF,OAAI,MAAM,CAAE;CACX,SAAK,CAAC,YAAY,EAAG,EAAC,MAAM,CAAC,CAAC,EAAG,OAAM,CAAE;AACxC,CAAA,aAAM,EAAE,CAAC;OACT;CAAA,IACD;CAAA,EACD;CAED,OAAM,CAAN,UAAO,CAAE;AMzEV,CN0EE,kBM1Ea,UAAU,iDAC4B,CNyEpC;AAGf,CAAA,SAAM,SAAS,EAAG,aAAY,CAAC;GAC/B;CAAA,KApE6B,OAAM,CKToB;CL+EzD","sourcesContent":["/**\r\n * Moves a sprite in a sinusoidal wave pattern by affecting its velocity vector. \r\n * \r\n * - If the Sprite is static when the action is applied to it, it will begin to move in a circle\r\n * - If the Sprite is moving in a straight line, the wave motion will be applied orthogonal to\r\n * its velocity vector. IE: when a sprite is moving only along the X axis, the motion will only be \r\n * applied to the Y axis\r\n * \r\n * @author Garcia\r\n */\r\nclass WaveMotionAction extends Action\r\n{\r\n\t// currentAngle; // keep track of the current angle for up and down motion (radians)\r\n\t// speed; // how fast to complete a wave cycle\r\n\t// amplitude; // the amplitude of the motion wave\r\n\t// repeat;\r\n\t\r\n\t// baseVelocity;\r\n\t// amplitudeX;\r\n\t// amplitudeY;\r\n\t\r\n\t\r\n\t/**\r\n\t * \r\n\t * @param\ttarget Target sprite whose motion will be altered\r\n\t * @param\tamplitude Amplitude of the wave applied to the motion\r\n\t * @param\tspeed Speed at which the wave cycles\r\n\t * @param\trepeat Maximum number of cycles after which the action will stop. 0 = infinite cycles\r\n\t */\r\n\tWaveMotionAction(target, amplitude, speed, repeat = 0) {\r\n\t\tsuper(target);\r\n\t\t\r\n\t\tthis.amplitude = amplitude;\r\n\t\tthis.speed = speed;\r\n\t\tthis.repeat = repeat;\r\n\r\n\t\tthis.TWO_PI = 2 * Math.PI;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Stores the original velocity of the target sprite before starting to change it\r\n\t */\r\n\tstart() {\r\n\t\tsuper.start();\r\n\t\t\r\n\t\tcurrentAngle = 0;\r\n\t\tbaseVelocity = new FlxPoint;\r\n\t\tbaseVelocity.x = target.velocity.x;\r\n\t\tbaseVelocity.y = target.velocity.y;\r\n\t\t\r\n\t\tamplitudeX = baseVelocity.x * amplitude;\r\n\t\tamplitudeY = baseVelocity.y * amplitude;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Called to update the actions of the controlled sprite once per game update cycle\r\n\t */\r\n\tupdate() {\r\n\t\tsuper.update();\r\n\t\t\r\n\t\tcurrentAngle += (FlxG.elapsed * speed);\r\n\t\t\r\n\t\tthis.target.velocity.y = (Math.sin(currentAngle) * amplitudeX) + baseVelocity.y;\r\n\t\tthis.target.velocity.x = (Math.cos(currentAngle) * amplitudeY) + baseVelocity.x;\r\n\t\t\r\n\t\t// stop the action if we've reached the maximum number of cycles\r\n\t\tif (repeat) {\r\n\t\t\tif ( (currentAngle / (TWO_PI)) > repeat) {\r\n\t\t\t\tfinish();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfinish() {\r\n\t\tsuper.finish();\r\n\t\t\r\n\t\t// restore the velocity vector of the affected sprite to its original values\r\n\t\ttarget.velocity = baseVelocity;\r\n\t}\r\n}\r\n","var __moduleName = $__placeholder__0;","var $__placeholder__0 = $__placeholder__1","$traceurRuntime.defaultSuperCall(this,\n                $__placeholder__0.prototype, arguments)","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2,\n                                       $__placeholder__3)","$traceurRuntime.superCall($__placeholder__0, $__placeholder__1, $__placeholder__2,\n                                   $__placeholder__3)"]}